name: Build and Deploy

on:
    push:
        branches: ["main"]

permissions:
    contents: write
    pages: write
    id-token: write

jobs:
    build:
        runs-on: ubuntu-latest

        env:
            GIT_COMMIT: ${{ github.sha }}

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: "18.20"
                  cache: "npm"
                  cache-dependency-path: |
                      package-lock.json

            - name: npm ci
              run: |
                  npm ci

            - name: npm test
              run: |
                  cd core
                  npm run test

            - name: npm build
              run: |
                  npm run build

            - uses: actions/upload-artifact@v4
              with:
                  name: viewer
                  path: viewer/dist
                  retention-days: 3

            - uses: actions/configure-pages@v5

            - uses: actions/upload-pages-artifact@v3
              with:
                  path: viewer/dist

            # - uses: actions/upload-artifact@v4
            #   with:
            #       name: client
            #       path: |
            #           viewer/dist
            #       if-no-files-found: error
            #       retention-days: 3

    deploy:
        runs-on: ubuntu-latest

        needs: build

        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4

    deploy-aws:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - uses: actions/download-artifact@v4
              with:
                  name: viewer

            - uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-north-1

            - name: Upload toS3
              run: |
                  ls -l
                  aws s3 sync --cache-control "public, max-age=2592000" --size-only ./ s3://${{ vars.BUCKET_NAME }}/
                  aws s3 cp --cache-control "public, max-age=30" ./index.html s3://${{ vars.BUCKET_NAME }}/
